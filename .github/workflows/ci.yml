name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on ${{ matrix.os }} with Swift ${{ matrix.swift-version }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-14, macos-15, macos-latest, ubuntu-22.04]  # Windows still needs work
        swift-version: ['6.0']
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: SwiftyLab/setup-swift@latest
      with:
        swift-version: ${{ matrix.swift-version }}
      if: runner.os != 'Windows'
        
    - name: Setup Swift on Windows
      uses: compnerd/gha-setup-swift@main
      with:
        branch: swift-${{ matrix.swift-version }}-release
        tag: ${{ matrix.swift-version }}-RELEASE
      if: runner.os == 'Windows'
        
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: |
          .build
          ~/.cache/org.swift.swiftpm
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Build
      run: swift build -c release --verbose
      
    - name: Run Tests (Unit Tests Only)
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          # On Linux, skip all AudioProvidersTests that contain fatalError issues
          swift test --filter TachikomaTests --skip "AudioProvidersTests"
        else
          swift test --filter TachikomaTests
        fi
      env:
        # Control test behavior - disable API tests for fast CI
        TACHIKOMA_DISABLE_API_TESTS: "true"
        TACHIKOMA_TEST_MODE: "mock"
        # Still provide API keys for tests that need them
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        X_AI_API_KEY: ${{ secrets.X_AI_API_KEY }}
        XAI_API_KEY: ${{ secrets.X_AI_API_KEY }}
      continue-on-error: true # Allow test failures while working on API-dependent test issues
        
    - name: Run Package Tests (Full API Testing)
      run: swift test --verbose
      env:
        # Enable full API testing with all providers (no mocking)
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        X_AI_API_KEY: ${{ secrets.X_AI_API_KEY }}
        XAI_API_KEY: ${{ secrets.X_AI_API_KEY }}
      continue-on-error: true # Allow failures - full API testing with real keys may fail

  build-examples:
    name: Build Examples on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-22.04]  # Windows still needs work
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Swift
      uses: SwiftyLab/setup-swift@latest
      with:
        swift-version: '6.0'
      if: runner.os != 'Windows'
        
    - name: Setup Swift on Windows
      uses: compnerd/gha-setup-swift@main
      with:
        branch: swift-6.0-release
        tag: 6.0-RELEASE
      if: runner.os == 'Windows'
        
    - name: Build Examples
      run: |
        # Build standalone examples
        swift build --package-path . -c release
        
        # Compile example scripts to check syntax
        find . -name "*.swift" -path "./Examples/*" -exec swift -typecheck {} \;
        find . -name "*_demo.swift" -exec swift -typecheck {} \;
        find . -name "*_examples.swift" -exec swift -typecheck {} \;

  lint:
    name: SwiftLint
    runs-on: macos-14
    # SwiftLint only runs on macOS
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: SwiftLint
      uses: norio-nomura/action-swiftlint@3.2.1
      continue-on-error: true # Don't fail CI on lint issues initially